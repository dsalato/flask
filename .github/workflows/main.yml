name: Python App Runner

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run-app:
    name: Run Application
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev python3-pip

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir tensorflow-cpu==2.12.0  # Устанавливаем CPU-версию для совместимости
        pip install flask gunicorn requests flask-bootstrap flask-wtf pillow keras lxml
        pip list  # Для отладки

    - name: Verify TensorFlow installation
      run: |
        python -c "import tensorflow as tf; print(f'TensorFlow version: {tf.__version__}')"
        python -c "from tensorflow.keras.applications import ResNet50; print('ResNet50 loaded successfully')"

    - name: Fix script permissions (Windows)
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        attrib -R .\flaskapp\st.sh
        icacls .\flaskapp\st.sh /grant Everyone:F

    - name: Make script executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: chmod +x ./flaskapp/st.sh

    - name: Run application
      shell: bash
      run: |
        cd flaskapp
        ./st.sh